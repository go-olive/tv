package tv

import (
	"time"

	"github.com/go-olive/tv/model"
	"github.com/go-olive/tv/util"
)

func init() {
	registerSite("kuaishou", &kuaishou{})
}

type kuaishou struct {
	base
}

func (this *kuaishou) Name() string {
	return "快手"
}

func (this *kuaishou) Snap(tv *Tv) (err error) {
	tv.Info = &Info{
		Timestamp: time.Now().Unix(),
	}
	return this.set(tv)
}

func (this *kuaishou) set(tv *Tv) error {
	if tv.cookie == "" {
		return ErrCookieNotSet
	}
	ksAG := new(model.KsLiveDetailAutoGenerated)
	req := &util.HttpRequest{
		URL:    "https://live.kuaishou.com/live_graphql",
		Method: "POST",
		RequestData: map[string]interface{}{
			"operationName": "LiveDetail",
			"variables": map[string]string{
				"principalId": tv.RoomID,
				"authToken":   "",
			},
			"query": "query LiveDetail($principalId: String, $authToken: String) {\n  webLiveDetail(principalId: $principalId, authToken: $authToken) {\n    liveStream\n    feedInfo {\n      pullCycleMillis\n      __typename\n    }\n    watchingInfo {\n      likeCount\n      watchingCount\n      __typename\n    }\n    noticeList {\n      feed\n      options\n      __typename\n    }\n    fastComments\n    commentColors\n    moreRecommendList {\n      user {\n        id\n        avatar\n        name\n        __typename\n      }\n      watchingCount\n      poster\n      coverUrl\n      caption\n      id\n      playUrls {\n        quality\n        url\n        __typename\n      }\n      quality\n      gameInfo {\n        category\n        name\n        pubgSurvival\n        type\n        kingHero\n        __typename\n      }\n      hasRedPack\n      liveGuess\n      expTag\n      hotIcon\n      __typename\n    }\n    hitBlackList\n    privateLive\n    limitToPlay\n    __typename\n  }\n}\n",
		},
		ResponseData: ksAG,
		ContentType:  "application/json",
		Header: map[string]string{
			"user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36 Edg/101.0.1210.32",
			"cookie":     tv.cookie,
		},
	}
	if err := req.Send(); err != nil {
		return err
	}

	if len(ksAG.Data.WebLiveDetail.LiveStream.PlayUrls) > 0 {
		tv.roomOn = true
		tv.streamUrl = ksAG.Data.WebLiveDetail.LiveStream.PlayUrls[0].URL
	}
	tv.roomName = ksAG.Data.WebLiveDetail.LiveStream.Caption

	return nil
}
